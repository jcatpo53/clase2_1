rm(list = ls())
setwd(dirname(rstudioapi::getactivedocumentcontext()$path))
rm(list = ls())
rm(list = ls())
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
getwd()
setwd(“C:\Users\catpo\Desktop\Machine Learning”)
getwd()
rm(list = ls())
setwd(“C:\Users\catpo\Desktop\Machine Learning”)
getwd()
rm(list = ls())
setwd(“C:/Users/catpo/Desktop/Machine Learning”)
getwd()
rm(list = ls())
setwd(“C:\Users\catpo\Desktop\Machine Learning\Workshop Machine Learning”)
getwd()
#limpiar memoria
rm(list = ls())
rm(list = ls())
setwd("C:/Users/catpo/Desktop/r_data_science/clase02")
getwd()
####creacion de matrices####
x1<-c(2,4,5,8,1,12,23,34)
class(x1)
#definir matricez:
help("matrix")
mat1<-matrix(data = 1:9,nrow = 3,ncol = 3)
mat2<-matrix(data = 1:9,ncol = 3)
mat3<-matrix(data=1:15,nrow = 5)
mat3
#byrow=false : lo primero que se llena son las columnas
mat3<-matrix(data =1:15,nrow=5,byrow = TRUE,dimnames = list(c('r1','r2','r3','r4','r5'),c('c1','c2','c3')))
mat3
class(mat3)
dim(mat3)
help(dim)
dimension<-dim(mat3)
colnames(mat3)
rownames(mat3)
colnames(mat3)<-c('col1','col2','col3')
mat3
#creamos una nueva matrix
help("sample")
mat4<-matrix(data=sample(1:129,9),ncol = 3)
mat4
mat4[2,2]
mat4[2,2]<-pi
mat4[2,2]
mat4[:3]
mat4[,3]
mat4[3,]
#elementos especiales
-1:1/0
x<-NA
x
x<-runif(1,0,10)
x<-runif(1,0,10)
if(x>5){
y<-TRUE
}else{
y<-FALSE
}
y
x
for(i in 1:5){
print(i)
}
####paquetes/librerias en r####
sessionInfo()
install.packages(c("ape", "arules", "backports", "car", "carData", "dbplyr", "diffobj", "dplyr", "ellipse", "ellipsis", "ggplot2", "ggpubr", "git2r", "glue", "haven", "httpuv", "later", "lubridate", "maptools", "modelr", "mvtnorm", "openxlsx", "pillar", "pkgbuild", "pkgload", "promises", "ps", "RcppArmadillo", "recipes", "rematch2", "rex", "rgeos", "rlang", "rmarkdown", "ROCR", "rversions", "scales", "sf", "sp", "SQUAREM", "systemfonts", "tibble", "tidyr", "tidyselect", "tinytex", "usethis", "vctrs", "vdiffr", "xfun", "xml2", "zoo"))
install.packages("dplyr")
install.packages("extraDistr")
library(extraDistr)
help("extraDistr")
library(help="extraDistr)
library(extraDistr)
####data frame en r####
#definicion
nota1<-runif(10,1,19)
nota1<-sample(1:20,10)
####data frame en r####
#definicion
nota1<-runif(10,1,19)
nota2<-sample(1:20,10)
####data frame en r####
#definicion
nota1<-runif(10,1,19)
nota2<-sample(1:20,10)
miprimerdf<-data.frame(notap=nota1,notaf=nota2)
class(miprimerdf)
dim(miprimerdf)
nota1
list(ls=ls())
####data frame en r####
#definicion
nota1<-runif(10,1,19)
